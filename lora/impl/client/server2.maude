load shim-dynamic-new

mod SERVER is
  pr SHIM-DYNAMIC .
  pr MAP{String,String} .
  pr LIST{Oid} .

  sort Table .
  subsort Table < Cid .
  op Table : -> Table .

  op tb : -> Oid .

  op table :_ : Map{String,String} -> Attribute [ctor gather(&)] . 


  sort Server .  *** Shim has as ID l(IP,0), e.g., l("localhost",0)
  subsort Server < Cid .
  op Server : -> Server .

  ---op store :_ : String -> Attribute [ctor gather(&)] .
  op store :_ : Map{String, String} -> Attribute [ctor gather(&)] .  


  var AS : AttributeSet .
  vars O O' : Oid .
  vars N' N : Nat .
  vars STR KV READ KR : String .
  vars STORE KVS : Map{String,String} .


 crl < O : Server | store : STORE >
     [KV]
   => 
     < O : Server | store : insert(substr(KV,0,N),substr(STR,0,N'),STORE) >  
     if N := find(KV, "[eok]", 0) /\ 
        STR := substr(KV, N + 5, length(KV)) /\
        N' := find(STR, "[eov]", 0) .


 crl < O : Server | store : STORE >
     (msg KV from O' to O)
   => 
     < O : Server | store : insert(substr(KV,0,N),substr(STR,0,N'),STORE) > 
     (msg "done" from O to O') 
     if N := find(KV, "[eok]", 0) /\ 
        STR := substr(KV, N + 5, length(KV)) /\
        N' := find(STR, "[eov]", 0) .



  crl < O : Server | store : STORE >
      (msg READ from O' to O)
    =>
      < O : Server | store : STORE >
      (msg STORE[substr(READ,0,N)] from O to O')
      if N := find(READ, "[eor]", 0) . 


  op init : -> Configuration .
  eq init = <>
            < l("128.174.244.87",0) : ServerShim | sockets : none, contacts : empty >
            < l("128.174.244.87") : Server | store : empty >
            createServerTcpSocket(socketManager, l("128.174.244.87"), 9810, 5)  .
            
endm

erew init .


